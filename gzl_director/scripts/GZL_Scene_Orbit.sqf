//============================================================================================================================================
//
//============================================================================================================================================
private["_cam","_vehicle","_step","_altitude","_dist","_camFOV"];
private["_iterator","_startAngle","_switchDir","_x","_y","_cx","_cy","_cz","_angle"];
//============================================================================================================================================
// Assign parameters
//============================================================================================================================================
_cam = _this select 0;
_vehicle = _this select 1;
_step = _this select 2;
_altitude = _this select 3;
_dist = _this select 4;
_camFOV = _this select 5;
//============================================================================================================================================
// Init variables
//============================================================================================================================================
_camTarget = objNull;
_iterator = 0;
_vel = velocity _vehicle;
_velX = _vel select 0;
_velY = _vel select 2;
_velZ = _vel select 1;

if (_velX > _velY ) then {
	
	if (_velX > 20 ) then { _step = _step + _velX / 500;};
	if (_velX < 20 ) then { _step = _step + ((_velX + 1 )/ 50);};
}
else {
		
	if (_velY < 20 ) then { _step = _step + ((_velY + 1) / 50);};
	if (_velY > 20 ) then { _step = _step + _velY / 500;};	
};

_startAngle = random 360;
_switchDir = round(random 1);
//============================================================================================================================================
// Setup Camera
//============================================================================================================================================		
_cam camSetTarget _vehicle;
_cam camSetFOV _camFOV;
_cam cameraEffect ["INTERNAL", "BACK"];
_cam camCommit 0;
//============================================================================================================================================
// Main Loop
//============================================================================================================================================
while { !GZL_SCENE_STOP } do {
	
	if ( vehicle _vehicle != _vehicle )
	then { _cam camSetTarget vehicle _vehicle; }
	else { _cam camSetTarget _vehicle;	};
	
	_iterator = _iterator + 1;
	_angle = _startAngle + (_iterator * _step);
	//if (_angle > 360) then { _angle = _angle % 360};
	_pos = getPosASL _vehicle;
	_x = _pos select 0;
	_y = _pos select 1;
	_cz = (_pos select 2) + _altitude;
	_cx = _x + _dist * cos(_angle);	
	if ( _switchDir == 0 )
	then { _cy = _y - _dist * sin(_angle);}
	else { _cy = _y + _dist * sin(_angle);};	
	
	_cam setPosASL [_cx,_cy,_cz];
	_cam camCommit 0;		
	
	sleep GZL_SLEEP * GZL_ACCTIME;
	GZL_SCENE_ACTIVE = true;
};

//============================================================================================================================================
// Cleanup
//============================================================================================================================================
_cam camSetTarget objNull;
_cam camCommit 0;
//============================================================================================================================================
//============================================================================================================================================
