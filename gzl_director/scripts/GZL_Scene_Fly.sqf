//============================================================================================================================================
//
//============================================================================================================================================
private["_cam","_vehicle","_step","_altitude","_dist","_camFOV"];
private["_targetPos","_x","_y","_z","_angle"];
//============================================================================================================================================
// Assign parameters
//============================================================================================================================================
_cam = _this select 0;
_vehicle = _this select 1;
_step = _this select 2;
_altitude = _this select 3;
_dist = _this select 4;
_camFOV = _this select 5;
//============================================================================================================================================
// Init variables
//============================================================================================================================================
_targetPos = position _vehicle;
_x = (_targetPos select 0) + 1;
_y = _targetPos select 1;
_z = _targetPos select 2;
_dist = _dist + (random 50);
_altitude = _altitude + 1;
_angle = floor(random 360);
_velocity = velocity _vehicle;
_velX = _velocity select 0;
_velY = _velocity select 2;
_velZ = _velocity select 1;
_factor = 1;
if ( _vehicle isKindOf "AIR" ) then {
	if ( (abs(_velX) < 70) || (abs(_velY) < 70) ) then { _factor = _factor * 2; };
	if (abs(_velX) > abs(_velY) ) then { _x = _x + _velX * _factor; };
	if (abs(_velY) > abs(_velX) ) then { _y = _y + _velY * _factor; };};
//============================================================================================================================================
// Setup Camera
//============================================================================================================================================	 
_cam camSetPos [_x + _dist * cos(_angle),_y + _dist * sin(_angle), _z + _altitude];
_cam camSetTarget _vehicle;	
_cam camSetFOV _camFOV;
_cam cameraEffect ["INTERNAL", "BACK"];	//!!!! Do Not change to "EXTERNAL" - causes jerkiness in view.
//_cam camCommit 0;
//============================================================================================================================================
// Main Loop
//============================================================================================================================================
while { !GZL_SCENE_STOP } do {	
	if ( vehicle _vehicle != _vehicle )
	then {_cam camSetTarget vehicle _vehicle;}
	else {_cam camSetTarget _vehicle;};
	
	_dist = _dist -	_step;
	_cam camSetPos [_x + _dist * cos(_angle), _y + _dist * sin(_angle), _z + _altitude];
	_cam camCommit 0;		
	sleep GZL_SLEEP * GZL_ACCTIME;	
	GZL_SCENE_ACTIVE = true;
};

//============================================================================================================================================
// Cleanup
//============================================================================================================================================
_cam camSetTarget objNull;
_cam camCommit 0;
//============================================================================================================================================
//============================================================================================================================================
